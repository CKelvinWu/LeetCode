// https://leetcode.com/problems/intersection-of-two-linked-lists

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        dummyA = headA
        dummyB = headB
        
        while headA and headB:
            if headA == headB:
                return headA
            elif headA.next is None and headB.next is None:
                return
            elif headA.next and headB.next is None:
                headA = headA.next
                headB = dummyA
            elif headB.next and headA.next is None:
                headB = headB.next
                headA = dummyB
            else:
                headA = headA.next
                headB = headB.next
        